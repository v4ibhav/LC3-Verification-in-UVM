uvmf:
  environments:
    "decode" :
      ## Agents are defined in a LIST so that the order is maintained. This is important
      ## because of how the BFMs are passed in at the bench utilize this same order when
      ## this environment's initialize() routine is called.
      agents :
        - name: "dec_in_agent" 
          type: "decode_in"
          initiator_responder: "INITIATOR"
        - name: "dec_out_agent"
          type: "decode_out"
      ## Analysis components are defined externally in a 'util_components' structure.
      ## They are instantiated here.
      analysis_components :
        - name: "pred"
          type: "decode_predictor"
      ## Each scoreboard is keyed by the scoreboard instantiation name with
      ## information on the scoreboard type and what type of transaction it
      ## will be parsing
      scoreboards : 
        - name: "scbd"
          sb_type: "uvmf_in_order_scoreboard"
          trans_type: "decode_out_transaction"
      ## Define top-level analysis ports here. Keyed by the name of each
      ## one, specify the type of transaction passing through as well as
      ## which internal component will be driving the AP.
      #analysis_ports :
      #  - name: "decode_in_ap"
      #    trans_type: "decode_in_transaction"
      #    connected_to: "dec_in_agent.monitored_ap"
      #  - name: "decode_out_ap"
      #    trans_type: "decode_out_transaction"
      #    connected_to: "dec_out_agent.monitored_ap"
      ## Define top-level analysis exports. Keyed by the unique name of each
      ## one, specify the type of transaction passing through as well as
      ## which internal component will be driven by this port.
      #analysis_exports :
      #  - name: "decode_in_ep"
      #    trans_type: "decode_in_transaction"
      #    connected_to: "pred.decode_in_ae"
      ## Define internal TLM connections. Each entry must have a 'driver' and
      ## a 'receiver' entry used to determine the full connection.
      tlm_connections :
        # Connection 0
        - driver:   "dec_in_agent.monitored_ap"
          receiver: "pred.decode_in_ae"
        # Connection 1
        - driver:   "dec_out_agent.monitored_ap"
          receiver: "scbd.actual_analysis_export"
        # Connection 2
        - driver:   "pred.decode_out_ap"
          receiver: "scbd.expected_analysis_export"
      ## Environment-level configuration variables. Each entry is keyed with a 
      ## unique name and is assigned a 'type' and 'isrand' value.
      config_vars :
        - name: "has_predictor"
          type : "bit"      
          isrand : "False"
          value : "1"
 
      ## Environment-level configuration constraints. Each entry is keyed with
      ## a unique name  with the value being an SVA constraint block
      

